Resources:
  KubernetesVPC3B245773:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: K8SAwsStack/KubernetesVPC
    Metadata:
      aws:cdk:path: K8SAwsStack/KubernetesVPC/Resource
  KubernetesVPCPublicSubnet1SubnetF018D715:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/18
      VpcId:
        Ref: KubernetesVPC3B245773
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: K8SAwsStack/KubernetesVPC/PublicSubnet1
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
    Metadata:
      aws:cdk:path: K8SAwsStack/KubernetesVPC/PublicSubnet1/Subnet
  KubernetesVPCPublicSubnet1RouteTableED5489C2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: KubernetesVPC3B245773
      Tags:
        - Key: Name
          Value: K8SAwsStack/KubernetesVPC/PublicSubnet1
    Metadata:
      aws:cdk:path: K8SAwsStack/KubernetesVPC/PublicSubnet1/RouteTable
  KubernetesVPCPublicSubnet1RouteTableAssociation561A3C0E:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: KubernetesVPCPublicSubnet1RouteTableED5489C2
      SubnetId:
        Ref: KubernetesVPCPublicSubnet1SubnetF018D715
    Metadata:
      aws:cdk:path: K8SAwsStack/KubernetesVPC/PublicSubnet1/RouteTableAssociation
  KubernetesVPCPublicSubnet1DefaultRoute52C79B5B:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: KubernetesVPCPublicSubnet1RouteTableED5489C2
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: KubernetesVPCIGWAAC589EA
    DependsOn:
      - KubernetesVPCVPCGW4393F49A
    Metadata:
      aws:cdk:path: K8SAwsStack/KubernetesVPC/PublicSubnet1/DefaultRoute
  KubernetesVPCPublicSubnet1EIP40845A34:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
    Metadata:
      aws:cdk:path: K8SAwsStack/KubernetesVPC/PublicSubnet1/EIP
  KubernetesVPCPublicSubnet1NATGatewayC197C295:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - KubernetesVPCPublicSubnet1EIP40845A34
          - AllocationId
      SubnetId:
        Ref: KubernetesVPCPublicSubnet1SubnetF018D715
      Tags:
        - Key: Name
          Value: K8SAwsStack/KubernetesVPC/PublicSubnet1
    Metadata:
      aws:cdk:path: K8SAwsStack/KubernetesVPC/PublicSubnet1/NATGateway
  KubernetesVPCPublicSubnet2Subnet75E53EDE:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.64.0/18
      VpcId:
        Ref: KubernetesVPC3B245773
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: K8SAwsStack/KubernetesVPC/PublicSubnet2
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
    Metadata:
      aws:cdk:path: K8SAwsStack/KubernetesVPC/PublicSubnet2/Subnet
  KubernetesVPCPublicSubnet2RouteTable8B7157F9:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: KubernetesVPC3B245773
      Tags:
        - Key: Name
          Value: K8SAwsStack/KubernetesVPC/PublicSubnet2
    Metadata:
      aws:cdk:path: K8SAwsStack/KubernetesVPC/PublicSubnet2/RouteTable
  KubernetesVPCPublicSubnet2RouteTableAssociationF21023D5:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: KubernetesVPCPublicSubnet2RouteTable8B7157F9
      SubnetId:
        Ref: KubernetesVPCPublicSubnet2Subnet75E53EDE
    Metadata:
      aws:cdk:path: K8SAwsStack/KubernetesVPC/PublicSubnet2/RouteTableAssociation
  KubernetesVPCPublicSubnet2DefaultRouteA982BB25:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: KubernetesVPCPublicSubnet2RouteTable8B7157F9
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: KubernetesVPCIGWAAC589EA
    DependsOn:
      - KubernetesVPCVPCGW4393F49A
    Metadata:
      aws:cdk:path: K8SAwsStack/KubernetesVPC/PublicSubnet2/DefaultRoute
  KubernetesVPCPublicSubnet2EIP4295B778:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
    Metadata:
      aws:cdk:path: K8SAwsStack/KubernetesVPC/PublicSubnet2/EIP
  KubernetesVPCPublicSubnet2NATGatewayC648EA9A:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - KubernetesVPCPublicSubnet2EIP4295B778
          - AllocationId
      SubnetId:
        Ref: KubernetesVPCPublicSubnet2Subnet75E53EDE
      Tags:
        - Key: Name
          Value: K8SAwsStack/KubernetesVPC/PublicSubnet2
    Metadata:
      aws:cdk:path: K8SAwsStack/KubernetesVPC/PublicSubnet2/NATGateway
  KubernetesVPCPrivateSubnet1SubnetDC915161:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.128.0/18
      VpcId:
        Ref: KubernetesVPC3B245773
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: K8SAwsStack/KubernetesVPC/PrivateSubnet1
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
    Metadata:
      aws:cdk:path: K8SAwsStack/KubernetesVPC/PrivateSubnet1/Subnet
  KubernetesVPCPrivateSubnet1RouteTableEAE62390:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: KubernetesVPC3B245773
      Tags:
        - Key: Name
          Value: K8SAwsStack/KubernetesVPC/PrivateSubnet1
    Metadata:
      aws:cdk:path: K8SAwsStack/KubernetesVPC/PrivateSubnet1/RouteTable
  KubernetesVPCPrivateSubnet1RouteTableAssociation6A8BC79F:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: KubernetesVPCPrivateSubnet1RouteTableEAE62390
      SubnetId:
        Ref: KubernetesVPCPrivateSubnet1SubnetDC915161
    Metadata:
      aws:cdk:path: K8SAwsStack/KubernetesVPC/PrivateSubnet1/RouteTableAssociation
  KubernetesVPCPrivateSubnet1DefaultRouteEC8A00BF:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: KubernetesVPCPrivateSubnet1RouteTableEAE62390
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: KubernetesVPCPublicSubnet1NATGatewayC197C295
    Metadata:
      aws:cdk:path: K8SAwsStack/KubernetesVPC/PrivateSubnet1/DefaultRoute
  KubernetesVPCPrivateSubnet2SubnetE9291F4F:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.192.0/18
      VpcId:
        Ref: KubernetesVPC3B245773
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: K8SAwsStack/KubernetesVPC/PrivateSubnet2
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
    Metadata:
      aws:cdk:path: K8SAwsStack/KubernetesVPC/PrivateSubnet2/Subnet
  KubernetesVPCPrivateSubnet2RouteTableB8C01376:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: KubernetesVPC3B245773
      Tags:
        - Key: Name
          Value: K8SAwsStack/KubernetesVPC/PrivateSubnet2
    Metadata:
      aws:cdk:path: K8SAwsStack/KubernetesVPC/PrivateSubnet2/RouteTable
  KubernetesVPCPrivateSubnet2RouteTableAssociationF0BEE94E:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: KubernetesVPCPrivateSubnet2RouteTableB8C01376
      SubnetId:
        Ref: KubernetesVPCPrivateSubnet2SubnetE9291F4F
    Metadata:
      aws:cdk:path: K8SAwsStack/KubernetesVPC/PrivateSubnet2/RouteTableAssociation
  KubernetesVPCPrivateSubnet2DefaultRouteD3AD61B9:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: KubernetesVPCPrivateSubnet2RouteTableB8C01376
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: KubernetesVPCPublicSubnet2NATGatewayC648EA9A
    Metadata:
      aws:cdk:path: K8SAwsStack/KubernetesVPC/PrivateSubnet2/DefaultRoute
  KubernetesVPCIGWAAC589EA:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: K8SAwsStack/KubernetesVPC
    Metadata:
      aws:cdk:path: K8SAwsStack/KubernetesVPC/IGW
  KubernetesVPCVPCGW4393F49A:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: KubernetesVPC3B245773
      InternetGatewayId:
        Ref: KubernetesVPCIGWAAC589EA
    Metadata:
      aws:cdk:path: K8SAwsStack/KubernetesVPC/VPCGW
  ASGInstanceSecurityGroup0525485D:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: K8SAwsStack/ASG/InstanceSecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress: []
      Tags:
        - Key: Name
          Value: K8SAwsStack/ASG
      VpcId:
        Ref: KubernetesVPC3B245773
    Metadata:
      aws:cdk:path: K8SAwsStack/ASG/InstanceSecurityGroup/Resource
  ASGInstanceRoleE263A41B:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                Fn::Join:
                  - ""
                  - - ec2.
                    - Ref: AWS::URLSuffix
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: K8SAwsStack/ASG/InstanceRole/Resource
  ASGInstanceProfile0A2834D7:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: ASGInstanceRoleE263A41B
    Metadata:
      aws:cdk:path: K8SAwsStack/ASG/InstanceProfile
  ASGLaunchConfigC00AF12B:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId:
        Ref: SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter
      InstanceType: t3.medium
      IamInstanceProfile:
        Ref: ASGInstanceProfile0A2834D7
      SecurityGroups:
        - Fn::GetAtt:
            - ASGInstanceSecurityGroup0525485D
            - GroupId
      UserData:
        Fn::Base64: "#!/bin/bash"
    DependsOn:
      - ASGInstanceRoleE263A41B
    Metadata:
      aws:cdk:path: K8SAwsStack/ASG/LaunchConfig
  ASG46ED3070:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      MaxSize: "1"
      MinSize: "1"
      DesiredCapacity: "1"
      LaunchConfigurationName:
        Ref: ASGLaunchConfigC00AF12B
      Tags:
        - Key: Name
          PropagateAtLaunch: true
          Value: K8SAwsStack/ASG
      VPCZoneIdentifier:
        - Ref: KubernetesVPCPrivateSubnet1SubnetDC915161
        - Ref: KubernetesVPCPrivateSubnet2SubnetE9291F4F
    UpdatePolicy:
      AutoScalingScheduledAction:
        IgnoreUnmodifiedGroupSizeProperties: true
    Metadata:
      aws:cdk:path: K8SAwsStack/ASG/ASG
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Modules: aws-cdk=0.37.0,@aws-cdk/aws-autoscaling=0.37.0,@aws-cdk/aws-autoscaling-common=0.37.0,@aws-cdk/aws-cloudwatch=0.37.0,@aws-cdk/aws-ec2=0.37.0,@aws-cdk/aws-elasticloadbalancingv2=0.37.0,@aws-cdk/aws-iam=0.37.0,@aws-cdk/aws-ssm=0.37.0,@aws-cdk/core=0.37.0,@aws-cdk/cx-api=0.37.0,@aws-cdk/region-info=0.37.0,jsii-runtime=node.js/v10.15.0
Parameters:
  SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /aws/service/ami-amazon-linux-latest/amzn-ami-hvm-x86_64-gp2

